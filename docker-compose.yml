version: "3.9"
services:
  app:
    build: .
    container_name: go-rest-api
    networks:
      - app-network
    ports:
      - 8080:8080
    env_file:
      - .env
    depends_on:
      postgres-db:
        condition: service_healthy
  # auto-migrate:
  #   image: golang:1.18-alpine
  #   container_name: auto-migrate-go-rest-api
  #   networks:
  #     - app-network
  postgres-db:
    image: 'postgres:14-alpine'
    container_name: postgres-db
    networks:
      - app-network
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
